// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux8Way(in=load, sel=address, a=iR0, b=iR1, c=iR2, d=iR3, e=iR4, f=iR5, g=iR6, h=iR7);
        Mux8Way16(a=oR0, b=oR1, c=oR2, d=oR3, e=oR4, f=oR5, g=oR6, h=oR7, sel=address, out=out);
        Register(in=in, load=iR0, out=oR0);
        Register(in=in, load=iR1, out=oR1);
        Register(in=in, load=iR2, out=oR2);
        Register(in=in, load=iR3, out=oR3);
        Register(in=in, load=iR4, out=oR4);
        Register(in=in, load=iR5, out=oR5);
        Register(in=in, load=iR6, out=oR6);
        Register(in=in, load=iR7, out=oR7);
}