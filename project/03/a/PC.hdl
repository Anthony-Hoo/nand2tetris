// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
        Register(in=tBin, load=ctrl, out=tBout);

        Or(a=load, b=reset, out=lrst);                  // set ctrl bit
        Or(a=lrst, b=inc, out=ctrl);

        Inc16(in=tBout, out=tBc);                       // inc the value of Reg
        Mux16(a=tBout, b=tBc, sel=inc, out=tBld);

        Mux16(a=tBld, b=in, sel=load, out=tBrst);       // determine to load or not

        Mux16(a=tBrst, b=false, sel=reset, out=tBin);   // determine to reset or not

        Or16(a=tBout, b=false, out=out);                // output
}
