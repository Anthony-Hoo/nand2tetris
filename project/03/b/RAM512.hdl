// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
        DMux8Way(in=load, sel=address[6..8], a=iR0, b=iR1, c=iR2, d=iR3, e=iR4, f=iR5, g=iR6, h=iR7);
        Mux8Way16(a=oR0, b=oR1, c=oR2, d=oR3, e=oR4, f=oR5, g=oR6, h=oR7, sel=address[6..8], out=out);
        RAM64(in=in, load=iR0, address=address[0..5], out=oR0);
        RAM64(in=in, load=iR1, address=address[0..5], out=oR1);
        RAM64(in=in, load=iR2, address=address[0..5], out=oR2);
        RAM64(in=in, load=iR3, address=address[0..5], out=oR3);
        RAM64(in=in, load=iR4, address=address[0..5], out=oR4);
        RAM64(in=in, load=iR5, address=address[0..5], out=oR5);
        RAM64(in=in, load=iR6, address=address[0..5], out=oR6);
        RAM64(in=in, load=iR7, address=address[0..5], out=oR7); 
}